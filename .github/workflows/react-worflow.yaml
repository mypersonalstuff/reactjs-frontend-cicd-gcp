on: 
  push: 
    branches: ["master"]
env: 
  IMAGE: reactjs-frontend-gcp
jobs: 
  build-and-push: 
    runs-on: ubuntu-latest
    environment: DOCKER_ENV
    steps: 
      - name: Checkout code 
        uses: actions/checkout@v3
      - name: Use with SHA 
        run: |
          echo "TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV
      - name: Show the TAGS values
        run: |
          echo "TAG value is : ${{ env.TAG }}"
      - name: login to Dockerhub 
        run: | 
          echo "${{ secrets.PASSWORD }}" | docker login -u ${{ secrets.USERNAME }} --password-stdin

      - name: Build docker image 
        run: docker build -t ${{ secrets.USERNAME }}/${{env.IMAGE}}:${{env.TAG }} .
      - name: Push docker image 
        run: |
          docker push ${{ secrets.USERNAME }}/${{env.IMAGE }}:${{ env.TAG }}
      - name: Logout from the Registry
        if: always()
        run: |
          docker logout 
  deploy-react: 
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: GCP_ENV 
    steps: 
    - name: Checkout Code 
      uses: actions/checkout@v3
    - name: Use with SHA 
      run: | 
        echo "TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV
    - name: Deploy via SSH to GCP VM 
      uses: appleboy/ssh-action@v1.0.0 
      with: 
        host: ${{ secrets.GCP_IP }}
        username: ${{ secrets.GCP_USER }}
        key: ${{ secrets.GCP_PRI_KEY }}
        envs: TAG 
        script: |
          
          echo "remove contianer "
          docker stop my-app || true 
          docker rm my-app || true 

          echo "Pulling the new docker image "
          docker pull "lyvanna544/${{env.IMAGE}}:${{env.TAG}}"


          echo "Running the new container "
          docker run -dp 3000:80 \
            --name my-app \
            lyvanna544/${{env.IMAGE}}:${{env.TAG}}
       